// Define AppMode and ensure it is correctly used across the app\nuse tui::layout::Rect;\nuse crate::frontend::app::App;\n\npub enum AppMode {\n    Chat,\n    Logs,\n    Quit,\n}\n\nimpl AppMode {\n    pub fn on_key(self, app: &mut App, key: tui::backend::Backend) {\n        match self {\n            AppMode::Chat => {\n                // Key handling specific to chat mode\n            },\n            AppMode::Logs => {\n                // Key handling specific to logs mode\n            },\n            AppMode::Quit => {\n                // Handle quit\n            },\n        };\n    }\n\n    pub fn tab_index(self) -> Option<usize> {\n        match self {\n            AppMode::Chat => Some(0),\n            AppMode::Logs => Some(1),\n            _ => None,\n        }\n    }\n\n    pub fn from_index(index: usize) -> Option<Self> {\n        match index {\n            0 => Some(AppMode::Chat),\n            1 => Some(AppMode::Logs),\n            _ => None,\n        }\n    }\n}\n
