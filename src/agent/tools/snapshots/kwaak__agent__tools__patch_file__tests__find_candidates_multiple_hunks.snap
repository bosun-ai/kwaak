---
source: src/agent/tools/patch_file.rs
expression: "hunks.iter().map(Hunk::render_updated).collect::<Result<Vec<_>>>().unwrap().join(\"\\n\")"
---
@@ -642,7 +642,9 @@ def iter_content(self, chunk_size=1, decode_unicode=False):
                 except IncompleteRead as e:
                     raise ChunkedEncodingError(e)
                 except DecodeError as e:
                     raise ContentDecodingError(e)
+                except socket.error as e:
+                    raise ConnectionError(e)
             except AttributeError:
                 # Standard file-like object.
                 while True:

@@ -652,7 +654,9 @@ def iter_content(self, chunk_size=1, decode_unicode=False):
                     yield chunk
 
-            self._content_consumed = True
+            
+            
 
+        
         # simulate reading small chunks of the content
         reused_chunks = iter_slices(self._content, chunk_size)
 

@@ -662,6 +666,9 @@ def iter_content(self, chunk_size=1, decode_unicode=False):
 
         if decode_unicode:
             chunks = stream_decode_response_unicode(chunks, self)
+
+        finally:
+            self._content_consumed = True
 
         return chunks
